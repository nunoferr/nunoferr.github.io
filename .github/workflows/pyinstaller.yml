name: Build EXE with PyInstaller

on:
  push:
    branches:
      - main # Trigger on push to the main branch
    paths:
      - "TribalWars/Staff-Scripts/TWRankings/TWRankings.py"
      - "TribalWars/Staff-Scripts/TWRankings/TWRankings.spec"
      - ".github/workflows/pyinstaller.yml"
  workflow_dispatch: # Allows manual trigger

permissions:
  contents: write # Allow pushing content changes

jobs:
  build:
    runs-on: windows-latest # Run on Windows to generate EXE

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          cd TribalWars/Staff-Scripts/TWRankings  # Move to the directory where the script is
          python -m pip install --upgrade pip  
          pip install pyinstaller
          pip install Pillow  # Ensure Pillow is installed
          pip install selenium  # Install Selenium
          pip install webdriver-manager  # Install WebDriver Manager
          pip install chromedriver-binary  # Install Chromedriver binary

      - name: Build executable
        run: |
          cd TribalWars/Staff-Scripts/TWRankings  # Move to the directory where the script is
          pyinstaller TWRankings.spec

      - name: Debug - Check if EXE was created
        run: |
          cd TribalWars/Staff-Scripts/TWRankings  # Move to the directory where the script is
          echo "Checking dist/ directory..."
          dir dist  # List contents of dist/ folder to confirm EXE is created

      - name: Decode and Store Signing Certificate
        run: |
          echo "${{ secrets.SIGNING_CERTIFICATE_BASE64 }}" | base64 --decode > signing_certificate.pfx

      - name: Sign EXE
        run: |
          & "C:\Program Files (x86)\Windows Kits\10\bin\x64\signtool.exe" sign /f signing_certificate.pfx /p ${{ secrets.CERTIFICATE_PASSWORD }} /tr http://timestamp.digicert.com /fd SHA256 /v dist/your_exe.exe

      - name: Find and sign executable file
        run: |
          $signtool = Get-ChildItem -Path "C:\Program Files (x86)\Windows Kits\10\bin" -Recurse -Filter signtool.exe |
                      Where-Object { $_.FullName -match "x64" } |  # Ensure x64 version
                      Select-Object -ExpandProperty FullName -First 1
          if (-not $signtool) {
            Write-Host "ERROR: SignTool (x64) not found!"
            exit 1
          }
          Write-Host "Using SignTool at: $signtool"
          & $signtool sign /f signing_certificate.pfx /p ${{ secrets.CERTIFICATE_PASSWORD }} /tr http://timestamp.digicert.com /fd SHA256 /v dist/TWRankings.exe

        shell: powershell

      - name: Commit and push EXE if it exists
        run: |
          cd TribalWars/Staff-Scripts/TWRankings
          if (Test-Path "dist\TWRankings*.exe") {
            echo "EXE found, committing..."
            git config --global user.name "github-actions"  
            git config --global user.email "actions@github.com"  
            git add dist/TWRankings-*.exe  
            git commit -m "Add built executable"  
            git push https://github.com/${{ github.repository }}.git HEAD:main
          } else {
            echo "ERROR: EXE not found!"
            exit 1
          }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
